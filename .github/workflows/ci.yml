name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  frontend:
    name: Frontend (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🟦 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: client/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-

      - name: 📦 Install frontend dependencies
        run: |
          cd client
          npm ci || npm install

      - name: Lint frontend
        run: |
          cd client
          npm run lint

      - name: Build frontend
        run: |
          cd client
          npm run build

      - name: Test frontend (with coverage)
        run: |
          cd client
          CI=true npm test -- --watchAll=false --coverage

      - name: Upload frontend coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: client-coverage-node${{ matrix.node }}
          path: client/coverage

  backend:
    name: Backend (Python ${{ matrix.python }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.10"]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python }}-${{ hashFiles('**/server/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 📦 Install backend dependencies
        run: |
          cd server
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test backend (with coverage)
        env:
          PYTHONWARNINGS: default
        run: |
          cd server
          pytest --cov=. --cov-report=xml:coverage.xml --cov-report=term-missing

      - name: Upload backend coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-coverage-py${{ matrix.python }}
          path: server/coverage.xml
